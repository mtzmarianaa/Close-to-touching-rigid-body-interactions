% Test the discs class

clear all
close all

geom = [];
geom.ctrs = 10*[-1 0 3 7; -6 0 2 4];
geom.Rs = 10*[1, 1.3, 0.4, 1.2];
geom.nBreakPoints = 3;

ds = discs(geom);

figure(1)
plot(ds.chnkrs, '-o')
axis equal

figure(2)
plot(ds.chnkrs, '-o')
hold on
quiver(ds.chnkrs)
axis equal


% We try to use chunkie to evaluate smooth integrands from values given at
% the surface discretization nodes
points = reshape(ds.chnkrs.r, 2 , ds.chnkrs.k*ds.chnkrs.nch);

f1 = @(x) f1_smooth(x);
f1vals = f1(points);


% Just for sanity check we plot these
figure(3)
scatter3(points(1, :), points(2, :), f1vals)

opts = [];
opts.usesmooth = true;

format long
int1 = chunkerintegral(ds.chnkrs, f1vals, opts);
true_int1 = 2*pi*(sum(geom.Rs));
fprintf("\n\n\n%5.2e  : computed integral.\n\n", int1)
fprintf("%5.2e  : relative error.\n\n", abs(int1 - true_int1)/int1 )
fprintf("%5.2e  : relative error.\n\n", abs(int1 - true_int1)/int1 )